# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  push:
    tags:
      - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: current

      - name: Store tag name
        id: vars
        run: |
          GIT_TAG=${GITHUB_REF#refs/*/}
          GIT_TAG_MAIN=${GIT_TAG%%-*}
          echo ::set-output name=tag::$GIT_TAG_MAIN
          echo ::set-output name=maintag::$GIT_TAG_MAIN
          echo ::set-output name=filename::config-$GIT_TAG_MAIN.json

      - name: Checkout 'main tag' state
        uses: actions/checkout@v2
        with:
          path: main
          ref: ${{ steps.vars.outputs.maintag }}
        continue-on-error: true

      - name: Generate test config
        working-directory: current
        run: |
          swift run ConfigMaker -o ../main/Tests/TastyConfigTests/FeedsToTest/config.json production
          swift run ConfigMaker -o Tests/TastyConfigTests/FeedsToTest/config.json production

      - name: Test from current state
        working-directory: current
        run: swift test

      - name: Test from main state
        working-directory: main
        run: swift test
        
      - name: Generate upload config
        working-directory: current
        run: swift run ConfigMaker -o ${{ steps.vars.outputs.filename }} production

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          
      - name: Upload config to s3
        working-directory: current
        run: |
          aws s3 cp ${{ steps.vars.outputs.filename }} s3://${{ secrets.AWS_S3_BUCKET }} --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers

